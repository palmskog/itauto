(************************************************************************)
(*         *   The Coq Proof Assistant / The Coq Development Team       *)
(*  v      *         Copyright INRIA, CNRS and contributors             *)
(* <O___,, * (see version control and CREDITS file for authors & dates) *)
(*   \VV/  **************************************************************)
(*    //   *    This file is distributed under the terms of the         *)
(*         *     GNU Lesser General Public License Version 2.1          *)
(*         *     (see LICENSE file for the text of the license)         *)
(************************************************************************)
(*                                                                      *)
(* Micromega: A reflexive tactic using the Positivstellensatz           *)
(*                                                                      *)
(* * Mappings from Coq tactics to Caml function calls                   *)
(*                                                                      *)
(*  Frédéric Besson (Irisa/Inria) 2006-2008			        *)
(*                                                                      *)
(************************************************************************)

{

open Ltac_plugin 
(*open Stdarg*)
open Tacarg 



}

DECLARE PLUGIN "cdcl_plugin"

TACTIC EXTEND CDCL
| [ "cdcl_nnpp" ]     -> { Cdcl.nnpp }
| [ "cdcl_change"  ] -> { Cdcl.change_goal     }
| [ "cdcl_conflicts" tactic(t)] -> { Cdcl.assert_conflicts_clauses (Tacinterp.tactic_of_value ist t)}
| [ "cdcl" tactic(t) ] -> {Cdcl.cdcl (Tacinterp.tactic_of_value ist t) }
END

TACTIC EXTEND NO
| [ "purify" ]     -> { No.purify_tac }
| [ "no"  tactic(t1) tactic(t2) ] ->
   { No.no_tac  (Tacinterp.tactic_of_value ist t1) (Tacinterp.tactic_of_value ist t2) }
END

